{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "opencti.fullname" . }}-worker
  labels:
    opencti.component: worker
    {{- include "opencti.labels" . | nindent 4 }}
spec:
  {{- if not .Values.worker.autoscaling.enabled }}
  replicas: {{ .Values.worker.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      opencti.component: worker
      {{- include "opencti.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.worker.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        opencti.component: worker
        {{- include "opencti.selectorLabels" . | nindent 8 }}
        {{- with .Values.worker.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.worker.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.worker.imagePullSecrets | nindent 8 }}
      {{- else if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "opencti.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.worker.podSecurityContext | nindent 8 }}
      {{- if .Values.worker.readyChecker.enabled }}
      initContainers:
      - name: ready-checker-server
        {{- if $.Values.global.imageRegistry }}
        image: "{{ $.Values.global.imageRegistry }}/busybox"
        {{- else }}
        image: busybox
        {{- end }}
        command:
          - 'sh'
          - '-c'
          - >
            RETRY=0;
            until [ $RETRY -eq {{ $.Values.worker.readyChecker.retries }} ];
            do
              nc -zv {{ $.Values.fullnameOverride | default (include "opencti.fullname" .) }}-server {{ $.Values.service.port }} && break;
              echo "[$RETRY/{{ $.Values.worker.readyChecker.retries }}] waiting service {{ $.Values.fullnameOverride | default (include "opencti.fullname" .) }}-server:{{ $.Values.service.port }} is ready";
              sleep {{ $.Values.worker.readyChecker.timeout }};
              RETRY=$(($RETRY + 1));
            done
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-worker
          securityContext:
            {{- toYaml .Values.worker.securityContext | nindent 12 }}
          {{- if $.Values.global.imageRegistry }}
          image: "{{ $.Values.global.imageRegistry }}/{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
          {{- else }}
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          ports:
            {{- if .Values.worker.env.WORKER_TELEMETRY_ENABLED }}
            - name: metrics
              containerPort: {{ .Values.worker.env.WORKER_PROMETHEUS_TELEMETRY_PORT | default 14269 }}
              protocol: TCP
            {{- end }}
          lifecycle:
            {{- with .Values.worker.lifecycle }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          env:
          # Variables from secrets have precedence
          {{- $envList := dict -}}
          {{- if .Values.worker.envFromSecrets }}
          {{- range $key, $value := .Values.worker.envFromSecrets }}
          - name: {{ $key | upper }}
            valueFrom:
              secretKeyRef:
                name: {{ $value.name }}
                key: {{ $value.key | default $key }}
          {{- $_ := set $envList $key true }}
          {{- end }}
          {{- end }}
          # Add variables in plain text from .Values.worker.env if they were not already added from secrets
          {{- if .Values.worker.env }}
          {{- range $key, $value := .Values.worker.env }}
          {{- if not (hasKey $envList $key) }}
          - name: {{ $key | upper }}
            value: {{ $value | quote }}
          {{- $_ := set $envList $key true }}
          {{- end }}
          {{- end }}
          {{- end }}
          # Special handling for OPENCTI_URL which is constructed from other values
          {{- if not (hasKey $envList "OPENCTI_URL") }}
          {{- if eq .Values.env.APP__BASE_PATH "/" }}
          - name: OPENCTI_URL
            value: "http://{{ include "opencti.fullname" . }}-server:{{ .Values.service.port }}"
          {{- else }}
          - name: OPENCTI_URL
            value: "http://{{ include "opencti.fullname" . }}-server:{{ .Values.service.port }}{{ .Values.env.APP__BASE_PATH }}"
          {{- end }}
          {{- end }}
          # Special handling for OPENCTI_TOKEN which is constructed from other values
          {{- if and (not (hasKey $envList "OPENCTI_TOKEN")) (or (.Values.secrets.APP__ADMIN__TOKEN) (.Values.env.APP__ADMIN__TOKEN)) }}
          {{- if .Values.secrets.APP__ADMIN__TOKEN }}
          - name: OPENCTI_TOKEN
            value: {{ .Values.secrets.APP__ADMIN__TOKEN }}
          {{- else if .Values.env.APP__ADMIN__TOKEN }}
          - name: OPENCTI_TOKEN
            value: {{ .Values.env.APP__ADMIN__TOKEN }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
         {{- with .Values.worker.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      terminationGracePeriodSeconds: {{ .Values.worker.terminationGracePeriodSeconds }}
      {{- with .Values.worker.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
